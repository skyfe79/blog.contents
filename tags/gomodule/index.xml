<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gomodule on Burt.K</title><link>https://blog.burt.pe.kr/tags/gomodule/</link><description>Recent content in gomodule on Burt.K</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><copyright>© Copyright Sungcheol Kim</copyright><lastBuildDate>Sat, 02 Nov 2019 20:14:00 +0900</lastBuildDate><atom:link href="https://blog.burt.pe.kr/tags/gomodule/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello Go module, Goodbye GOPATH</title><link>https://blog.burt.pe.kr/posts/good-bye-gopath/</link><pubDate>Sat, 02 Nov 2019 20:14:00 +0900</pubDate><guid>https://blog.burt.pe.kr/posts/good-bye-gopath/</guid><description>Go언어를 접하면서 $GOPATH를 설정하는 점이 약간 부담스러웠다. 그러나 1.13 이후 버전부터는 go module기능을 사용하여 $GOPATH이외의 위치에서 프로젝트를 생성할 수 있다.
시작하기 우선 프로젝트를 만들 폴더를 만든다. 예제로 AwesomeBin 폴더를 만들고 보자.
$ mkdir AwesomeBin $ cd AwesomeBin AwesomeBin 폴더에 진입한 다음에 우리가 만들 모듈의 이름. main package가 있는 곳이면 실행 파일의 이름으로 모듈을 초기화한다. awesome 실행파일이라고 가정해 보자.
$ go mod init awesome go: creating new go.mod: module awesome 그러면 go.</description></item></channel></rss>