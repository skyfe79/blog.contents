<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>modules on Burt.K</title><link>https://blog.burt.pe.kr/tags/modules/</link><description>Recent content in modules on Burt.K</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><copyright>© Copyright Sungcheol Kim</copyright><lastBuildDate>Sun, 10 Nov 2019 17:35:24 +0900</lastBuildDate><atom:link href="https://blog.burt.pe.kr/tags/modules/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 로컬 패지키 모듈</title><link>https://blog.burt.pe.kr/posts/local-package-with-go-module/</link><pubDate>Sun, 10 Nov 2019 17:35:24 +0900</pubDate><guid>https://blog.burt.pe.kr/posts/local-package-with-go-module/</guid><description>Go modules를 사용하면 $GOPATH를 신경쓰지 않고 Go 프로젝트를 시작할 수 있습니다. 이미 오픈되어 있는 Go모듈을 사용할 경우에는 아래처럼 go.mod파일에 패키지의 주소와 버전을 기입하면 패키지를 모듈로 사용할 수 있습니다.
module star go 1.13 require ( github.com/fogleman/gg v1.3.0 github.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 // indirect golang.org/x/image v0.0.0-20191009234506-e7c1f5e7dbb8 // indirect ) 로컬패키지 그렇다면 로컬에 존재하는 패키지는 어떻게 go.mod파일에 기입할 수 있을까요? 아래와 같은 폴더 구조를 가지는 프로젝트를 생각해 보겠습니다.
hellogo ├── constants └── logics hellogo 폴더 하위에 모듈로 constants와 logics를 가지고 있습니다.</description></item></channel></rss>